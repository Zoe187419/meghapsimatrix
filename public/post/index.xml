<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Megha</title>
    <link>/post/</link>
      <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 21 Oct 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>Posts</title>
      <link>/post/</link>
    </image>
    
    <item>
      <title>Tidy Tuesday Horror</title>
      <link>/post/tidy_tues_horror/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/tidy_tues_horror/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;load-the-data-and-check-duplicates&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Load the Data and Check Duplicates&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(lubridate)
library(kableExtra)
library(ggridges)


# there were complete duplicated rows
dat &amp;lt;- read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-10-22/horror_movies.csv&amp;quot;) %&amp;gt;%
  distinct(.) # removes complete dups

# check duplicates
dup_title &amp;lt;- dat %&amp;gt;%
  filter(duplicated(title) | duplicated(title, fromLast = TRUE)) %&amp;gt;%
  arrange(title)

# examined they seem different movies even though same title
dup_title %&amp;gt;%
  filter(duplicated(plot))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 0 x 12
## # … with 12 variables: title &amp;lt;chr&amp;gt;, genres &amp;lt;chr&amp;gt;, release_date &amp;lt;chr&amp;gt;,
## #   release_country &amp;lt;chr&amp;gt;, movie_rating &amp;lt;chr&amp;gt;, review_rating &amp;lt;dbl&amp;gt;,
## #   movie_run_time &amp;lt;chr&amp;gt;, plot &amp;lt;chr&amp;gt;, cast &amp;lt;chr&amp;gt;, language &amp;lt;chr&amp;gt;,
## #   filming_locations &amp;lt;chr&amp;gt;, budget &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dup_title %&amp;gt;%
  filter(duplicated(release_date)| duplicated(release_date, fromLast = TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 12
##   title genres release_date release_country movie_rating review_rating
##   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;           &amp;lt;chr&amp;gt;                &amp;lt;dbl&amp;gt;
## 1 The … Comed… 21-Jul-15    USA             &amp;lt;NA&amp;gt;                   5.2
## 2 The … Comed… 21-Jul-15    USA             NOT RATED              3.6
## # … with 6 more variables: movie_run_time &amp;lt;chr&amp;gt;, plot &amp;lt;chr&amp;gt;, cast &amp;lt;chr&amp;gt;,
## #   language &amp;lt;chr&amp;gt;, filming_locations &amp;lt;chr&amp;gt;, budget &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# The Jokesters seems to be a duplicate but with different rating and run time
# Deleting it for now
dat &amp;lt;- dat %&amp;gt;%
  filter(title != &amp;quot;The Jokesters (2015)&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;genres&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Genres&lt;/h1&gt;
&lt;p&gt;The genre column looked extremely messy so some data munging fun. Each film can be categorized into multiple genres.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat_long &amp;lt;- dat %&amp;gt;% 
  separate_rows(genres, sep = &amp;quot;\\|&amp;quot;) %&amp;gt;% # long format
  mutate(genres = str_trim(genres))  

# Just to check - looks okay - just 1 movie with no genre
table(dat_long$genres, useNA = &amp;quot;ifany&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##     Action      Adult  Adventure  Animation  Biography     Comedy 
##        335          1        115         39          4        511 
##      Crime      Drama     Family    Fantasy    History     Horror 
##        120        529         11        229          6       3309 
##      Music    Musical    Mystery Reality-TV    Romance     Sci-Fi 
##          5         13        453          1         99        308 
##      Sport   Thriller        War    Western       &amp;lt;NA&amp;gt; 
##          4       1369         14         15          1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat_long &amp;lt;- dat_long %&amp;gt;%
  mutate(genres = fct_infreq(fct_lump(genres, n = 8))) # Factor keeping 8 most frequent categories and lumping the rest to Other and order the factor by frequency&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;table-number-of-films-per-genre&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Table: Number of Films per Genre&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;genre_count &amp;lt;- dat_long %&amp;gt;%
  filter(!is.na(genres)) %&amp;gt;%
  group_by(genres) %&amp;gt;%
  summarize(n = n()) %&amp;gt;%
  ungroup() 

kable(genre_count, format = &amp;quot;html&amp;quot;, table.attr = &amp;quot;style = \&amp;quot;color: white;\&amp;quot;&amp;quot;) %&amp;gt;%
  kable_styling(bootstrap_options = &amp;quot;striped&amp;quot;, full_width = F)&lt;/code&gt;&lt;/pre&gt;
&lt;table style=&#34;color: white; width: auto !important; margin-left: auto; margin-right: auto;&#34; class=&#34;table table-striped&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
genres
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Horror
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3309
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Thriller
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1369
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Drama
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
529
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Comedy
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
511
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Mystery
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
453
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Other
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
447
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Action
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
335
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sci-Fi
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
308
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Fantasy
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
229
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;bar-graph-distribution-of-genres&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Bar Graph: Distribution of Genres&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;genre_count %&amp;gt;%
  ggplot(aes(x = genres, y = n, fill = genres)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;) + 
  scale_y_continuous(labels = scales::comma) +  # y axis to have commas 
  scale_fill_brewer(palette =&amp;quot;BuPu&amp;quot;, direction = -1) + # reverse order the palette
  theme_light() + 
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;Number of Films&amp;quot;) + 
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/tidy_tues_horror_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;review-rating-by-release-year&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Review Rating by Release Year&lt;/h1&gt;
&lt;p&gt;Some of the years are &lt;code&gt;dmy&lt;/code&gt; format, some just have the years. I am extracting the year and filling in any that didn’t parse with the year value from the original release_date column. No missing values for year :)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;date_dat &amp;lt;- dat %&amp;gt;%
  mutate(date = dmy(release_date),
         yr = year(date),
         yr = ifelse(is.na(yr), release_date, yr))

table(is.na(date_dat$yr))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## FALSE 
##  3310&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(is.na(date_dat$review_rating))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## FALSE  TRUE 
##  3058   252&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;date_dat %&amp;gt;%
  select(release_date, date, yr) %&amp;gt;%
  filter(is.na(date)) %&amp;gt;%
  head()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##   release_date date       yr   
##   &amp;lt;chr&amp;gt;        &amp;lt;date&amp;gt;     &amp;lt;chr&amp;gt;
## 1 2017         NA         2017 
## 2 2013         NA         2013 
## 3 2012         NA         2012 
## 4 2013         NA         2013 
## 5 2017         NA         2017 
## 6 2017         NA         2017&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;date_dat %&amp;gt;%  
  ggplot(aes(x = yr, y = review_rating, fill = yr)) +
  geom_boxplot(alpha = .5) + 
  labs(x = &amp;quot;Release Year&amp;quot;, y = &amp;quot;Review Rating&amp;quot;) + 
  theme_light()  + 
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/tidy_tues_horror_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Looks like there is a slight increase in ratings for newer films.&lt;/p&gt;
&lt;p&gt;And here is a ridgeline plot :)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;date_dat %&amp;gt;%  
  ggplot(aes(y = yr, x = review_rating, fill = yr)) +
  geom_density_ridges(alpha = .5) + 
  labs(y = &amp;quot;Release Year&amp;quot;, x = &amp;quot;Review Rating&amp;quot;) +
  theme_light() + 
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/tidy_tues_horror_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Continuous Treatment in Propensity Score Analysis</title>
      <link>/post/continuous-r-rmarkdown/</link>
      <pubDate>Wed, 09 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/continuous-r-rmarkdown/</guid>
      <description>


&lt;p&gt;In my qualifying exam, in the written part, I was asked about how to analyze the effect of continuous, not binary, treatment using propensity score analysis. I skipped it for the written but I spent a few days looking up how to analyze this in case I would be asked during my oral examination. Sadly, no one asked me even when I asked them to, so here is a blog detailing my explorations.&lt;/p&gt;
&lt;div id=&#34;binary-treatment&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Binary Treatment&lt;/h1&gt;
&lt;p&gt;For a review of propensity score analysis with binary treatment, please see Stuart (2010). Below let &lt;span class=&#34;math inline&#34;&gt;\(e(X)\)&lt;/span&gt; denote propensity scores, &lt;span class=&#34;math inline&#34;&gt;\(D\)&lt;/span&gt; denote a binary treatment, and &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; denote all the observed confounders. In the case of binary treatment, propensity scores represent the probability of receiving treatment given the covariates:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[e(X) = P(D = 1|X)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;We estimate the scores using logistic regression or machine learning techniques like generalized boosted models.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;extension-to-contiuous-treatment&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Extension to Contiuous Treatment&lt;/h1&gt;
&lt;p&gt;In binary treatment context, we assume that the potential outcomes (&lt;span class=&#34;math inline&#34;&gt;\(Y(1)\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(Y(0)\)&lt;/span&gt;) are independent of treatment given &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Y(1), Y(0) \perp\!\!\!\perp D |X\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;and by extension are independent given the propensity scores:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Y(0), Y(1) \perp\!\!\!\perp D|e(X)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Hirano and Imbens (2004) introduced the assumption of weak unconfoundedness in the context of continuous treatment. They stated: “we do not require joint independence of all potential outcomes. Instead, we require conditional independence to hold for each value of the treatment.” Below, let &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; denote a continuous treatment variable. The potential outcome when &lt;span class=&#34;math inline&#34;&gt;\(T = t\)&lt;/span&gt; is unreated to the treatment given the set of covariates:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Y(t) \perp\!\!\!\perp T |X\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;To calculate the propensity scores, in the case of continuous treatment, we cannot find the probability that continuous treatment (&lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;) equals a given value &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;. The likelihood of continuous variables taking on a given value is zero. For continuous treatment variable, we find the conditional density, the probability that &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; is infinitely close to &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; given &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;. Below let &lt;span class=&#34;math inline&#34;&gt;\(r(t,x)\)&lt;/span&gt; denote the propensity scores. The right hand side of the equation represents the probability density function of a normal distribution. To estimate the propensity scores, we need to run a linear regression predicting the treatment by a set of covariates (Austin, 2019). From that we get the fitted values (&lt;span class=&#34;math inline&#34;&gt;\(X\hat{\beta}\)&lt;/span&gt;) and the model variance (&lt;span class=&#34;math inline&#34;&gt;\({\sigma}^2\)&lt;/span&gt;) (Austin, 2019). The fitted values take the place of the mean in the density function.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ r(t, x) = {f_{T|X}}^{(t|x)} = \frac{1}{\sqrt{2\pi\hat{\sigma}^2}} e^{-\frac{(t - X\hat{\beta})^2}{2\pi\hat{\sigma}^2}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Conditional on the propensity scores, we can assume that each potential outcome is independent of treatment:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Y(t) \perp\!\!\!\perp T |r(t,x)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Hirano and Imbens (2004) state that: “Within strata with the same value of &lt;span class=&#34;math inline&#34;&gt;\(r(t,X)\)&lt;/span&gt;, the probability that &lt;span class=&#34;math inline&#34;&gt;\(T = t\)&lt;/span&gt; does not depend on the value of &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;.” I have seen &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(I\)&lt;/span&gt; in front of the &lt;span class=&#34;math inline&#34;&gt;\((T = t)\)&lt;/span&gt;, denoting the indicator function (Hirano &amp;amp; Imbens, 2004; Bia &amp;amp; Mattei, 2008).&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[X \perp\!\!\!\perp 1(T = t)|r(t,x)\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;calculating-weights&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Calculating Weights&lt;/h1&gt;
&lt;p&gt;Following the same logic as the inverse propensity weights (IPW) for the estimation of the average treatment effect (ATE) for a binary treatment, we calculate the inverse of the propensity scores as the weights:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\frac{1}{{f_{T|X}}^{(t|x)}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;However, Robins et al. (2000) noted that such weights can result in infinite variance (Austin, 2019). They suggested to use stabilized weights as follows:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\frac{{f_{T}}^{(t)}}{{f_{T|X}}^{(t|x)}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Here the numerator represents the marginal density of treatment:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[{f_{T}}^{(t)} = \frac{1}{\sqrt{2\pi\hat{\sigma_t}^2}} e^{-\frac{(t - \mu_t)^2}{2\pi\hat{\sigma_t}^2}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The stabilized weights make the distribution of the IPW narrower as there is less difference between the numerators and the denominators (van der Wal &amp;amp; Geskus, 2011).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;real-data-analysis-example&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Real Data Analysis Example&lt;/h1&gt;
&lt;p&gt;The data that I use here is from High School and Beyond (HSB) longitudinal study used by Rosenbaum (1986) to analyze the effect of dropping out of high school on later math achievement. The missing data in the original dataset have been replaced with one iteration of imputation using &lt;code&gt;mice&lt;/code&gt; (van Buuren &amp;amp; Groothuis-Oudshoorn, 2011). This is not an appropriate method to analyze missing data but for the purpose of the example I am just using the one complete data. For the sake of this example, let’s analyze the effect of math efficacy on later math achievement.&lt;/p&gt;
&lt;div id=&#34;loading-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Loading the Data&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)

dat &amp;lt;- read_csv(&amp;quot;https://raw.githubusercontent.com/meghapsimatrix/R_practice/master/Data/HSLS09_complete.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-numerators&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The Numerators&lt;/h2&gt;
&lt;p&gt;Here I am getting the numerators of the IPW, the marginal densities. I have regressed math_efficacy on just the intercept and used &lt;code&gt;dnorm&lt;/code&gt; function to extract the densities.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# the numerator
mod_num &amp;lt;- lm(math_efficacy ~ 1, data = dat)

num &amp;lt;- dnorm(x = dat$math_efficacy, # treatment 
             mean = fitted.values(mod_num), # fitted values
             sd = summary(mod_num)$sigma) # model sigma&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-denominators&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The Denominators&lt;/h2&gt;
&lt;p&gt;Here I am getting the denominators of the IPW, the conditional densities. I have regressed math_efficacy on &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; and used &lt;code&gt;dnorm&lt;/code&gt; function to extract the densities. I am not quite sure whether to use the model sigma which divides the sum of errors squared by the degrees of freedom before taking the square root or whether I should just take the standard deviation of the errors. However, with large sample size the difference between the two are negligible.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# the demonimator
mod_den &amp;lt;- lm(math_efficacy ~ sex + race + language + repeated_grade + IEP + locale + region + SES, data = dat)

den &amp;lt;- dnorm(x = dat$math_efficacy, # treatment variable
             mean = fitted.values(mod_den), # fitted values
             sd = summary(mod_den)$sigma)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-ipw&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The IPW&lt;/h2&gt;
&lt;p&gt;Below I calculate the stabilized weights:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat &amp;lt;- dat %&amp;gt;%
  mutate(ipw_s = num/den)

summary(dat$ipw_s)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##  0.1398  0.9186  0.9778  1.0001  1.0390  5.9782&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;checking-balance-and-outcome-analysis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Checking Balance and Outcome Analysis&lt;/h2&gt;
&lt;p&gt;Please check back on my next post :) Short story: For balance, we have to calculate weighted correlations, and for outcome analysis we estimate the expected outcome for each treatment level and compare (Austin, 2019).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;p&gt;Bia, M., &amp;amp; Mattei, A. (2008). A Stata package for the estimation of the dose-response function through adjustment for the generalized propensity score. The Stata Journal, 8(3), 354-373.&lt;/p&gt;
&lt;p&gt;Hirano K and Imbens GW. The propensity score with continuous treatments. In: Gelman A and Meng X-L (eds) Applied Bayesian modeling and causal inference from incomplete-data perspectives. Chichester: John Wiley &amp;amp; Sons Ltd, 2004, pp.73–84.&lt;/p&gt;
&lt;p&gt;Robins JM, Hernan MA and Brumback B. Marginal structural models and causal inference in epidemiology. Epidemiol 2000; 11: 550–560.&lt;/p&gt;
&lt;p&gt;Rosenbaum, P. R. (1986). Dropping out of high school in the United States: An observational study. Journal of Educational Statistics, 11(3), 207-224.&lt;/p&gt;
&lt;p&gt;Stuart, E. A. (2010). Matching methods for causal inference: A review and a look forward. Statistical science: a review journal of the Institute of Mathematical Statistics, 25(1), 1.&lt;/p&gt;
&lt;p&gt;van Buuren, S., &amp;amp; Groothuis-Oudshoorn, K. (2011). mice: Multivariate imputation by
chained equations in r. Journal of Statistical Software, 45 (3), 1–67. Retrieved from
&lt;a href=&#34;http://www.jstatsoft.org/v45/i03/&#34; class=&#34;uri&#34;&gt;http://www.jstatsoft.org/v45/i03/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;van der Wal, W. M., &amp;amp; Geskus, R. B. (2011). Ipw: an R package for inverse probability weighting. J Stat Softw, 43(13), 1-23.&lt;/p&gt;
&lt;p&gt;Zhu, Y., Coffman, D. L., &amp;amp; Ghosh, D. (2015). A boosting algorithm for estimating generalized propensity scores with continuous treatments. Journal of causal inference, 3(1), 25-40.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Nepal Earthquake</title>
      <link>/post/nepal_earthquake/</link>
      <pubDate>Wed, 09 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/nepal_earthquake/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/leaflet/leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/leaflet/leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/leafletfix/leafletfix.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/Proj4Leaflet/proj4-compressed.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/Proj4Leaflet/proj4leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/rstudio_leaflet/rstudio_leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/leaflet-binding/leaflet.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/leaflet-providers/leaflet-providers_1.9.0.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/leaflet-providers-plugin/leaflet-providers-plugin.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;I wanted to analyze the data from the &lt;a href=&#34;https://en.wikipedia.org/wiki/April_2015_Nepal_earthquake&#34;&gt;April 2015 Nepal earthquake&lt;/a&gt; that resulted in around 10,000 deaths. I am using a &lt;a href=&#34;https://data.world/opennepal/1b7b5d6e-3c98-49f4-a884-a167c4040d3a&#34;&gt;dataset&lt;/a&gt; that I found in &lt;code&gt;data.world&lt;/code&gt;. The data contains date, time, location and magnitude of the earthquake and the many aftershocks that followed. The data is updated as of June 2, 2015.&lt;/p&gt;
&lt;div id=&#34;libraries&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Libraries&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(geojsonio)
library(broom)
library(gganimate)
library(leaflet)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;read-in-the-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Read in the data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;earthquake_dat &amp;lt;- read_csv(&amp;quot;https://raw.githubusercontent.com/meghapsimatrix/Data_Visualization/master/data/earthquake-0-csv-1.csv&amp;quot;) %&amp;gt;%
  mutate(lab = paste0(Epicentre, &amp;quot;; &amp;quot;, &amp;quot;Magnitude(ML): &amp;quot;, `Magnitude(ML)`),
         is_gorkha = if_else(`Magnitude(ML)` == max(`Magnitude(ML)`), &amp;quot;Gorkha&amp;quot;, &amp;quot;Aftershocks&amp;quot;))

head(earthquake_dat)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 8
##   Date       `Local Time` Latitude Longitude `Magnitude(ML)` Epicentre
##   &amp;lt;date&amp;gt;     &amp;lt;drtn&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;    
## 1 2015-06-01 04:35            28.0      85.5             4   Sindhupa…
## 2 2015-05-31 13:54            28.3      84.5             4.2 Lamjung  
## 3 2015-05-30 22:13            27.8      85.2             4.5 Nuwakot  
## 4 2015-05-30 20:35            28.0      85.2             4   Rasuwa/N…
## 5 2015-05-30 01:52            27.8      85.2             4   Dhading …
## 6 2015-05-29 15:44            28        85.0             5.2 Dhading  
## # … with 2 more variables: lab &amp;lt;chr&amp;gt;, is_gorkha &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# there is one entry where I think the lat and long are switched
summary(earthquake_dat$Latitude)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##   26.94   27.71   27.82   28.06   27.98   84.71&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(earthquake_dat$Longitude)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##   28.16   85.23   85.80   85.25   86.06   86.67&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Gorkha seems like the lat and long are switched
(outlier &amp;lt;- earthquake_dat %&amp;gt;%
  filter(Latitude == max(Latitude)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 8
##   Date       `Local Time` Latitude Longitude `Magnitude(ML)` Epicentre
##   &amp;lt;date&amp;gt;     &amp;lt;drtn&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;    
## 1 2015-04-25 18:29            84.7      28.2             5.5 Gorkha   
## # … with 2 more variables: lab &amp;lt;chr&amp;gt;, is_gorkha &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;earthquake_dat &amp;lt;- earthquake_dat %&amp;gt;%
  mutate(Latitude = if_else(lab == outlier$lab &amp;amp; Date == outlier$Date, outlier$Longitude, Latitude),
         Longitude = if_else(lab == outlier$lab &amp;amp; Date == outlier$Date, outlier$Latitude, Longitude))

# Sindhupalchowk seems like the Longitude is wrong
earthquake_dat %&amp;gt;%
  filter(Longitude == min(Longitude))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 8
##   Date       `Local Time` Latitude Longitude `Magnitude(ML)` Epicentre
##   &amp;lt;date&amp;gt;     &amp;lt;drtn&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;    
## 1 2015-05-08 08:19            27.8      28.9             4.2 Sindhupa…
## # … with 2 more variables: lab &amp;lt;chr&amp;gt;, is_gorkha &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sindhupalchowk &amp;lt;- earthquake_dat %&amp;gt;%
  filter(str_detect(Epicentre, &amp;quot;Sindhu&amp;quot;))

# Mean imputing based on other values for Sindhupalchowk
earthquake_dat &amp;lt;- earthquake_dat %&amp;gt;%
  mutate(Longitude = if_else(Longitude == min(Longitude), mean(sindhupalchowk$Longitude), Longitude))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;leaflet&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Leaflet&lt;/h1&gt;
&lt;p&gt;Created using the &lt;code&gt;leaflet&lt;/code&gt; package:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;leaflet(earthquake_dat) %&amp;gt;% 
  addTiles()  %&amp;gt;% 
  setView(lat = 27, lng = 85, zoom = 7) %&amp;gt;%
  addProviderTiles(providers$CartoDB.DarkMatter) %&amp;gt;%
  addCircleMarkers(~Longitude, ~Latitude,
                   radius = ~`Magnitude(ML)`, popup = ~lab, stroke = FALSE, opacity = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; &lt;a href=\&#34;http://openstreetmap.org\&#34;&gt;OpenStreetMap&lt;\/a&gt; contributors, &lt;a href=\&#34;http://creativecommons.org/licenses/by-sa/2.0/\&#34;&gt;CC-BY-SA&lt;\/a&gt;&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.DarkMatter&#34;,null,null,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false}]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[27.98,28.29,27.79,28.01,27.75,28,28.01,28.17,28.07,27.82,27.94,27.59,27.59,27.77,27.64,27.95,27.99,28.04,27.89,27.91,27.59,28.02,27.54,27.71,27.63,27.84,27.74,27.71,28.01,27.76,27.8,27.84,27.76,27.67,27.9,27.74,27.69,30.31,27.78,27.63,28.05,27.79,28.02,27.93,27.85,27.52,27.92,27.9,27.66,28.11,27.69,27.71,27.84,27.48,27.73,27.64,27.6,27.45,27.7,28.13,27.97,27.66,27.65,28.07,27.74,27.61,27.92,27.93,27.69,27.63,27.84,27.71,28.06,27.75,27.62,27.83,27.8,27.67,27.66,27.92,27.7,27.64,27.63,27.85,27.6,27.68,27.84,27.79,27.69,27.79,27.75,27.65,27.82,27.85,27.91,27.68,27.58,27.68,27.97,28.03,27.84,27.78,27.72,27.89,27.7,27.71,27.72,27.62,27.76,27.73,27.69,27.57,27.68,27.8,27.7,27.8,27.76,27.69,27.68,27.88,27.79,27.66,27.8,27.8,27.68,27.63,27.69,27.73,27.84,27.82,28.16,28.1,27.91,27.99,27.65,28.02,27.88,26.94,28.04,28.04,28.01,27.77,27.75,27.69,27.94,27.92,27.79,27.75,28.04,28.01,27.96,27.74,28.06,27.74,27.95,27.79,28.12,27.8,27.79,27.97,27.69,27.75,28.05,28.09,27.89,27.8,27.94,27.98,28.08,27.69,27.66,28.24,27.72,27.93,27.74,27.95,28.04,27.88,27.74,28.04,27.75,27.68,27.7,27.92,27.65,28.05,27.93,28.19,27.95,27.86,28.04,27.79,27.93,28.2,27.88,27.78,27.83,27.96,27.76,27.81,28.1,28.1,27.89,27.92,28.29,28.19,27.82,27.67,27.8,27.93,28.24,27.67,27.77,27.82,27.57,27.56,27.75,28.26,27.91,27.83,27.95,27.67,27.65,28.31,27.72,27.79,27.68,27.89,27.77,27.97,27.79,27.94,27.75,27.84,28.26,28.04,27.64,27.8,28.32,27.84,27.67,28.05,27.67,27.69,27.99,27.82,27.98,27.6,28.24,28.25,27.93,28.14,28.05,27.93,27.71,27.94,27.78,28.1,28.34,27.78,27.9,27.77,27.8,27.92,27.95,28.14,27.73,27.6,28.05,27.73,27.68,27.79,27.69,28.1,28.16,27.82,28,28.14,28.14,27.86,27.87,28.29,28,27.91,27.65,28.18,27.9,27.78,27.99,28.2,28.13,28.28,28.41,28.24],[85.51,84.46,85.17,85.19,85.21,84.98,84.84,84.72,84.94,86.34,85.54,86.16,86.19,86.25,85.31,84.8,84.79,85.13,85.53,85.53,86.2,85.26,85.43,86.05,86.3,86.24,86.19,86.07,84.68,86.26,86.29,86,86.28,86.18,85.51,86.2,86.16,81.47,85.93,86.25,85.08,85.14,84.98,85.46,86.32,85.26,86.04,85.99,86.03,84.88,86.26,86.07,86.24,85.87,86.06,86.14,86.26,85.31,85.85,84.89,85.48,86.09,86.12,84.7,86.17,86.2,84.84,84.84,86.08,86.25,85.84,86.04,85.35,86.14,86.09,86.15,85.82,86.08,86.07,86.31,86.15,85.7,86.17,86.29,86.16,86.17,86.25,86.07,86.11,86.19,86.25,86.18,86.47,85.92,84.82,85.3,86.41,86.04,86.45,86.36,86.23,85.85,85.97,85.88,86.04,86,86.2,86.16,86.24,86.11,86.05,86.29,86.03,85.95,86.01,86.12,86.31,86.21,86.23,85.94,86.11,86.17,85.83,85.94,86.04,86.17,86.24,86.21,86.17,86.12,84.9,84.91,85.75,85.86,85.56,85.25,86,86.67,85.96,85.2,85.41,85.88,85.1513793103448,86.04,85.58,85.46,85.16,85.19,85.26,84.68,86,86.03,85.05,86,85.86,86.23,84.8,85.16,85.16,85.21,85.99,85.87,84.94,85.72,85.73,85.11,84.83,84.87,85.04,85.93,86.01,84.76,85.74,85.5,86.28,85.73,85.32,85.87,85.99,85.33,85.95,85.3,85.98,85.87,86.09,85.34,84.83,84.8,85.52,84.89,85.37,85.14,85.63,84.78,85.88,85.17,85.83,85.55,85.8,86.09,85.49,84.65,85.76,85.51,84.93,85.03,85.89,85.29,85.12,85.86,85.23,85.55,85.12,85.76,85.74,85.73,85.2,85.1,85.55,86.06,85.87,85.3,85.97,84.97,85.97,85.15,85.95,85.6,85.91,85.81,86,86.05,85.94,86.05,85.02,85.5,85.63,85.16,84.73,85.12,85.28,85.34,86.07,85.25,85.02,85.8,84.99,85.96,84.82,85.83,85.56,84.71,85.35,85.56,85.43,85.55,85.98,85.27,85.91,85.17,85.53,85.83,85.29,85.64,85.56,85.16,85.9,86.09,85.25,85.9,85.32,85.16,86.02,85.2,84.71,86.05,85.4,85.28,85.28,85.85,85.8,85.16,85.6,85.33,85.63,84.95,84.86,85.84,85.71,85.75,85.65,84.72,85.8,84.75],[4,4.2,4.5,4,4,5.2,4.8,4,4.2,4.2,4,4.1,4.2,4.2,4,4,4,4.2,4.6,4.5,4.2,5,4.3,4.1,4.1,4.3,4.4,4.1,5,4.3,4.4,4.2,4.4,4.2,4.4,4.2,4.1,4.8,4,4.1,4.8,4.2,4,4,4.2,4.4,4.2,4,4.3,4.1,4,4.2,4.4,4.6,4.4,4.3,5.5,4.2,4.2,4,4,4.1,4.1,4,4,4.5,4,5.5,4.3,4.1,4,4,4.5,4,4.2,4.5,4,5,4.1,4.3,4.1,4,4.5,4,4.3,5.1,4.6,4.8,4.7,4.6,4.4,4.4,4.3,4.2,5.9,4.2,4.3,4.2,4.8,4.1,4.4,4.3,4,4.4,4.7,4.3,4.6,4.7,4.4,5,4.2,4.8,4.4,4.2,4.2,4.7,5.3,4.7,4.7,4.8,5,5.2,5.3,5.1,4.3,4.8,5,6.2,5.8,6.8,4.1,4,4,4.2,4.2,4,4.4,4,4.2,4.1,4.2,4.8,4.2,5,4,4,4,4.2,4,4.2,4.2,4.3,4,4.2,4.4,4.7,4,4.1,4,4.2,4.3,4.2,4,4.2,4,4.9,4.5,4.1,4,4.5,4.1,5.1,4,4.2,4.3,4.2,4,4.2,4,4.5,4,4,4.2,4.3,4.1,4.7,4.7,4.4,4.5,4.5,4,4.2,4,4,4.2,4,4,4,4,4.2,4.9,4.2,4.2,4.2,4.8,4,4.2,4.5,4,4,4.3,4.2,4.7,4.4,4.5,4.2,4.1,4.5,4.2,4,5.3,4,4,4.5,4.5,4,4,5,4.5,4.5,4.8,5,5.3,6.9,4.8,4.5,5,5.1,4.5,4,4,4,4.5,4,5.5,4.8,4,4.8,4.3,4,4.4,4.2,4,4.1,4.6,4.1,4.1,4,5.6,4,4,4.1,4,5.3,4.2,4.4,5,4.5,4.1,4.7,4.1,4.1,4.9,4.7,5.5,4.5,4.9,4.1,4.6,4,4.1,4.6,5.5,5.3,5.7,5.2,5.1,5.2,5.1,5.3,5.7,6.6,5.5,7.6],null,null,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:&#34;#03F&#34;,&#34;weight&#34;:5,&#34;opacity&#34;:2,&#34;fill&#34;:true,&#34;fillColor&#34;:&#34;#03F&#34;,&#34;fillOpacity&#34;:0.2},null,null,[&#34;Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Lamjung; Magnitude(ML): 4.2&#34;,&#34;Nuwakot; Magnitude(ML): 4.5&#34;,&#34;Rasuwa/Nuwakot; Magnitude(ML): 4&#34;,&#34;Dhading /Nuwakot/Kathmandu; Magnitude(ML): 4&#34;,&#34;Dhading; Magnitude(ML): 5.2&#34;,&#34;Gorkha/Dhading; Magnitude(ML): 4.8&#34;,&#34;Gorkha; Magnitude(ML): 4&#34;,&#34;Dhading; Magnitude(ML): 4.2&#34;,&#34;Dolakha; Magnitude(ML): 4.2&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Dolakha; Magnitude(ML): 4.1&#34;,&#34;Dolakha; Magnitude(ML): 4.2&#34;,&#34;Dolakha; Magnitude(ML): 4.2&#34;,&#34;Kathmandu; Magnitude(ML): 4&#34;,&#34;Gorkha/Dhading; Magnitude(ML): 4&#34;,&#34;Gorkha/Dhading; Magnitude(ML): 4&#34;,&#34;Rasuwa/Nuwakot; Magnitude(ML): 4.2&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.6&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.5&#34;,&#34;Dolakha; Magnitude(ML): 4.2&#34;,&#34;Rasuwa; Magnitude(ML): 5&#34;,&#34;Lalitpur/Kavre; Magnitude(ML): 4.3&#34;,&#34;Dolakha; Magnitude(ML): 4.1&#34;,&#34;Dolakha; Magnitude(ML): 4.1&#34;,&#34;Dolakha; Magnitude(ML): 4.3&#34;,&#34;Dolakha; Magnitude(ML): 4.4&#34;,&#34;Dolakha; Magnitude(ML): 4.1&#34;,&#34;Gorkha; Magnitude(ML): 5&#34;,&#34;Dolakha; Magnitude(ML): 4.3&#34;,&#34;Dolakha; Magnitude(ML): 4.4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.2&#34;,&#34;Dolakha; Magnitude(ML): 4.4&#34;,&#34;Dolakha; Magnitude(ML): 4.2&#34;,&#34;Sindhupalchok; Magnitude(ML): 4.4&#34;,&#34;Dolakha; Magnitude(ML): 4.2&#34;,&#34;Dolakha; Magnitude(ML): 4.1&#34;,&#34;Humla; Magnitude(ML): 4.8&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Dolakha; Magnitude(ML): 4.1&#34;,&#34;Dhading/Nuwakot; Magnitude(ML): 4.8&#34;,&#34;Dhading /Nuwakot; Magnitude(ML): 4.2&#34;,&#34;Dhading; Magnitude(ML): 4&#34;,&#34;Nuwakot; Magnitude(ML): 4&#34;,&#34;Dolakha; Magnitude(ML): 4.2&#34;,&#34;Kathmandu/Lalitput/Makawanpur; Magnitude(ML): 4.4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.2&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Dolakha; Magnitude(ML): 4.3&#34;,&#34;Dhading / Gorkha; Magnitude(ML): 4.1&#34;,&#34;Dolakha; Magnitude(ML): 4&#34;,&#34;Dolakha; Magnitude(ML): 4.2&#34;,&#34;Dolakha; Magnitude(ML): 4.4&#34;,&#34;Ramechhap; Magnitude(ML): 4.6&#34;,&#34;Dolakha; Magnitude(ML): 4.4&#34;,&#34;Dolakha; Magnitude(ML): 4.3&#34;,&#34;Dolakha; Magnitude(ML): 5.5&#34;,&#34;Lalitpur/Makawanapur; Magnitude(ML): 4.2&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.2&#34;,&#34;Gorkha/Dhading; Magnitude(ML): 4&#34;,&#34;Nuwakot; Magnitude(ML): 4&#34;,&#34;Dolakha; Magnitude(ML): 4.1&#34;,&#34;Dolakha; Magnitude(ML): 4.1&#34;,&#34;Gorkha; Magnitude(ML): 4&#34;,&#34;Dolakha; Magnitude(ML): 4&#34;,&#34;Dolakha; Magnitude(ML): 4.5&#34;,&#34;Dhading; Magnitude(ML): 4&#34;,&#34;Dhading; Magnitude(ML): 5.5&#34;,&#34;Dolakha; Magnitude(ML): 4.3&#34;,&#34;Dolakha; Magnitude(ML): 4.1&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Dolakha; Magnitude(ML): 4&#34;,&#34;Rasuwa; Magnitude(ML): 4.5&#34;,&#34;Dolakha; Magnitude(ML): 4&#34;,&#34;Dolakha; Magnitude(ML): 4.2&#34;,&#34;Dolakha; Magnitude(ML): 4.5&#34;,&#34;Sindupalchok; Magnitude(ML): 4&#34;,&#34;Dolakha; Magnitude(ML): 5&#34;,&#34;Dolakha; Magnitude(ML): 4.1&#34;,&#34;Dolakha; Magnitude(ML): 4.3&#34;,&#34;Dolakha; Magnitude(ML): 4.1&#34;,&#34;Kavrepalanchok; Magnitude(ML): 4&#34;,&#34;Dolakha; Magnitude(ML): 4.5&#34;,&#34;Dolakha; Magnitude(ML): 4&#34;,&#34;Dolakha; Magnitude(ML): 4.3&#34;,&#34;Dolakha; Magnitude(ML): 5.1&#34;,&#34;Dolakha; Magnitude(ML): 4.6&#34;,&#34;Dolakha/Sindhupalchowk; Magnitude(ML): 4.8&#34;,&#34;Sindhupalchok; Magnitude(ML): 4.7&#34;,&#34;Dolakha; Magnitude(ML): 4.6&#34;,&#34;Dolakha; Magnitude(ML): 4.4&#34;,&#34;Dolakha; Magnitude(ML): 4.4&#34;,&#34;Dolakha; Magnitude(ML): 4.3&#34;,&#34;Sindhupalchok; Magnitude(ML): 4.2&#34;,&#34;Dhading; Magnitude(ML): 5.9&#34;,&#34;Kathmandu; Magnitude(ML): 4.2&#34;,&#34;Dolakha/Ramechhap; Magnitude(ML): 4.3&#34;,&#34;Dolakha; Magnitude(ML): 4.2&#34;,&#34;Dolakha/Tibet; Magnitude(ML): 4.8&#34;,&#34;Dolakha/Tibet; Magnitude(ML): 4.1&#34;,&#34;Dolakha; Magnitude(ML): 4.4&#34;,&#34;Sindhupalchok; Magnitude(ML): 4.3&#34;,&#34;Dolakha/Sindhupalchok; Magnitude(ML): 4&#34;,&#34;Sindhupalchok; Magnitude(ML): 4.4&#34;,&#34;Dolakha; Magnitude(ML): 4.7&#34;,&#34;Dolakha; Magnitude(ML): 4.3&#34;,&#34;Dolakha; Magnitude(ML): 4.6&#34;,&#34;Dolakha; Magnitude(ML): 4.7&#34;,&#34;Dolakha/Ramechhap; Magnitude(ML): 4.4&#34;,&#34;Dolakha; Magnitude(ML): 5&#34;,&#34;Dolakha; Magnitude(ML): 4.2&#34;,&#34;Dolakha/Ramechhap; Magnitude(ML): 4.8&#34;,&#34;Dolakha; Magnitude(ML): 4.4&#34;,&#34;Sindhupalchok; Magnitude(ML): 4.2&#34;,&#34;Dolakha; Magnitude(ML): 4.2&#34;,&#34;Dolakha; Magnitude(ML): 4.7&#34;,&#34;Dolakha; Magnitude(ML): 5.3&#34;,&#34;Dolakha; Magnitude(ML): 4.7&#34;,&#34;Dolakha; Magnitude(ML): 4.7&#34;,&#34;Sindhupalchok; Magnitude(ML): 4.8&#34;,&#34;Dolakha; Magnitude(ML): 5&#34;,&#34;Dolakha; Magnitude(ML): 5.2&#34;,&#34;Sindhupalchok; Magnitude(ML): 5.3&#34;,&#34;Sindhupalchok; Magnitude(ML): 5.1&#34;,&#34;Dolakha; Magnitude(ML): 4.3&#34;,&#34;Dolakha; Magnitude(ML): 4.8&#34;,&#34;Dolakha; Magnitude(ML): 5&#34;,&#34;Dolakha; Magnitude(ML): 6.2&#34;,&#34;Dolakha; Magnitude(ML): 5.8&#34;,&#34;Dolakha/Shindhupalchok; Magnitude(ML): 6.8&#34;,&#34;Gorkha/Dhading; Magnitude(ML): 4.1&#34;,&#34;Dhading; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.2&#34;,&#34;kavre; Magnitude(ML): 4.2&#34;,&#34;Rasuwa; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.4&#34;,&#34;Udayapur; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk/Tibet; Magnitude(ML): 4.2&#34;,&#34;Rasuwa; Magnitude(ML): 4.1&#34;,&#34;Rasuwa/Nuwakot; Magnitude(ML): 4.2&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.8&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.2&#34;,&#34;Dolakha/Sindhupalchok; Magnitude(ML): 5&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Nuwakot; Magnitude(ML): 4&#34;,&#34;Nuwakot; Magnitude(ML): 4&#34;,&#34;Nuwakot; Magnitude(ML): 4.2&#34;,&#34;Rasuwa; Magnitude(ML): 4&#34;,&#34;Gorkha; Magnitude(ML): 4.2&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.2&#34;,&#34;Sindhupalchowk/Dolakha; Magnitude(ML): 4.3&#34;,&#34;Dhading /Nuwakot; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk/Dolakha; Magnitude(ML): 4.2&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.4&#34;,&#34;Dolakha; Magnitude(ML): 4.7&#34;,&#34;Gorkha; Magnitude(ML): 4&#34;,&#34;Nuwakot; Magnitude(ML): 4.1&#34;,&#34;Nuwakot; Magnitude(ML): 4&#34;,&#34;Nuwakot/Rasuwa; Magnitude(ML): 4.2&#34;,&#34;Dolakha; Magnitude(ML): 4.3&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.2&#34;,&#34;Dhading; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.2&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Nuwakot; Magnitude(ML): 4.9&#34;,&#34;Dhading; Magnitude(ML): 4.5&#34;,&#34;Dhading; Magnitude(ML): 4.1&#34;,&#34;Gorkha; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.5&#34;,&#34;Dolakha; Magnitude(ML): 4.1&#34;,&#34;Gorkha; Magnitude(ML): 5.1&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.2&#34;,&#34;Dolakha; Magnitude(ML): 4.3&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.2&#34;,&#34;Rasuwa; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.2&#34;,&#34;Dolakha; Magnitude(ML): 4&#34;,&#34;Rasuwa; Magnitude(ML): 4.5&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Kathmandu; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk/Dolakha; Magnitude(ML): 4.2&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.3&#34;,&#34;Dolakha; Magnitude(ML): 4.1&#34;,&#34;Rasuwa; Magnitude(ML): 4.7&#34;,&#34;Dhading; Magnitude(ML): 4.7&#34;,&#34;Gorkha; Magnitude(ML): 4.4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.5&#34;,&#34;Dhading; Magnitude(ML): 4.5&#34;,&#34;Nuwakot; Magnitude(ML): 4&#34;,&#34;Nuwakot; Magnitude(ML): 4.2&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Gorkha; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.2&#34;,&#34;Nuwakot; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Dolakha; Magnitude(ML): 4.2&#34;,&#34;Rasuwa/Sindhupalchowk; Magnitude(ML): 4.9&#34;,&#34;Gorkha; Magnitude(ML): 4.2&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.2&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.2&#34;,&#34;Gorkha/Dhading; Magnitude(ML): 4.8&#34;,&#34;Dhading; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.2&#34;,&#34;Kathmandu; Magnitude(ML): 4.5&#34;,&#34;Nuwakot; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Rasuwa; Magnitude(ML): 4.3&#34;,&#34;Kavrepalanchowk; Magnitude(ML): 4.2&#34;,&#34;Nuwakot; Magnitude(ML): 4.7&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.4&#34;,&#34;Kavrepalanchowk; Magnitude(ML): 4.5&#34;,&#34;Kavrepalanchowk; Magnitude(ML): 4.2&#34;,&#34;Kathmandu; Magnitude(ML): 4.1&#34;,&#34;Rasuwa; Magnitude(ML): 4.5&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.2&#34;,&#34;Dolakha Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 5.3&#34;,&#34;Kathmandu; Magnitude(ML): 4&#34;,&#34;Dolakha; Magnitude(ML): 4&#34;,&#34;Gorkha; Magnitude(ML): 4.5&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.5&#34;,&#34;Nuwakot; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk/Dolakha; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 5&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.5&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.5&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.8&#34;,&#34;Sindhupalchowk/Tibet; Magnitude(ML): 5&#34;,&#34;Sindhupalchowk; Magnitude(ML): 5.3&#34;,&#34;Sindhupalchowk/Dolakha; Magnitude(ML): 6.9&#34;,&#34;Gorkha/Dhading; Magnitude(ML): 4.8&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.5&#34;,&#34;Kavrepalanchowk; Magnitude(ML): 5&#34;,&#34;Nuwakot; Magnitude(ML): 5.1&#34;,&#34;Gorkha; Magnitude(ML): 4.5&#34;,&#34;Nuwakot; Magnitude(ML): 4&#34;,&#34;Kathmandu; Magnitude(ML): 4&#34;,&#34;Rasuwa; Magnitude(ML): 4&#34;,&#34;Dolakha; Magnitude(ML): 4.5&#34;,&#34;Kathmandu; Magnitude(ML): 4&#34;,&#34;Nuwakot; Magnitude(ML): 5.5&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.8&#34;,&#34;Gorkha; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.8&#34;,&#34;Gorkha; Magnitude(ML): 4.3&#34;,&#34;Rasuwa; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.4&#34;,&#34;Gorkha; Magnitude(ML): 4.2&#34;,&#34;Rasuwa; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.1&#34;,&#34;Kathmandu; Magnitude(ML): 4.6&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.1&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.1&#34;,&#34;Rasuwa; Magnitude(ML): 4&#34;,&#34;Tibet; Magnitude(ML): 5.6&#34;,&#34;Nuwakot; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.1&#34;,&#34;Nuwakot; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 5.3&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.2&#34;,&#34;Rasuwa; Magnitude(ML): 4.4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 5&#34;,&#34;Dolakha; Magnitude(ML): 4.5&#34;,&#34;Rasuwa; Magnitude(ML): 4.1&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.7&#34;,&#34;Kathmandu; Magnitude(ML): 4.1&#34;,&#34;Nuwakot; Magnitude(ML): 4.1&#34;,&#34;Dolakha; Magnitude(ML): 4.9&#34;,&#34;Rasuwa; Magnitude(ML): 4.7&#34;,&#34;Gorkha; Magnitude(ML): 5.5&#34;,&#34;Dolakha; Magnitude(ML): 4.5&#34;,&#34;Nuwakot; Magnitude(ML): 4.9&#34;,&#34;Rasuwa; Magnitude(ML): 4.1&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.6&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4&#34;,&#34;Sindhupalchowk; Magnitude(ML): 4.1&#34;,&#34;Rasuwa; Magnitude(ML): 4.6&#34;,&#34;Sindhupalchowk; Magnitude(ML): 5.5&#34;,&#34;Rasuwa; Magnitude(ML): 5.3&#34;,&#34;Kabre; Magnitude(ML): 5.7&#34;,&#34;Gorkha; Magnitude(ML): 5.2&#34;,&#34;Dhading; Magnitude(ML): 5.1&#34;,&#34;Sindhupalchowk; Magnitude(ML): 5.2&#34;,&#34;Tibet; Magnitude(ML): 5.1&#34;,&#34;Rasuwa; Magnitude(ML): 5.3&#34;,&#34;Rasuwa; Magnitude(ML): 5.7&#34;,&#34;Gorkha; Magnitude(ML): 6.6&#34;,&#34;Sindhupalchowk/Tibet; Magnitude(ML): 5.5&#34;,&#34;Gorkha; Magnitude(ML): 7.6&#34;],null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[27,85],7,[]],&#34;limits&#34;:{&#34;lat&#34;:[26.94,30.31],&#34;lng&#34;:[81.47,86.67]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;make-a-map-of-nepal&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Make a Map of Nepal&lt;/h1&gt;
&lt;p&gt;I got the code for the base map from &lt;a href=&#34;https://stackoverflow.com/questions/50859765/chloropleth-map-with-geojson-and-ggplot2&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;np &amp;lt;- geojson_read(&amp;quot;https://raw.githubusercontent.com/mesaugat/geoJSON-Nepal/master/nepal-districts.geojson&amp;quot;,  what = &amp;quot;sp&amp;quot;)
np_dat &amp;lt;- tidy(np)


# plot
np_plot &amp;lt;- ggplot() +
  geom_polygon(data = np_dat, aes( x = long, y = lat, group = group)) 

np_plot&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Nepal_Earthquake_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;mapping-on-the-earthquake-and-aftershocks&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Mapping on the Earthquake and Aftershocks&lt;/h1&gt;
&lt;p&gt;Now plotting the latitude and longitudes. Size indicates the magnitude of the earthquake.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(np_earthquake &amp;lt;- np_plot + 
  geom_point(data = earthquake_dat, 
             aes(x = Longitude, y = Latitude, 
                 size = `Magnitude(ML)`), 
             color = &amp;quot;red&amp;quot;, alpha = .5) + 
  labs(color = &amp;quot;&amp;quot;) + 
  theme_void() +
  theme(legend.position = &amp;quot;none&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Nepal_Earthquake_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;animating&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Animating&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;np_animate &amp;lt;- np_earthquake +
  transition_states(Date) +
  labs(title = &amp;#39;Date: {closest_state}&amp;#39;) +
  enter_appear() +
  exit_disappear()

animate(np_animate)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Nepal_Earthquake_files/figure-html/unnamed-chunk-6-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
