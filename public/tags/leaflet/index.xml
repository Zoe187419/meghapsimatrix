<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>leaflet | Megha</title>
    <link>/tags/leaflet/</link>
      <atom:link href="/tags/leaflet/index.xml" rel="self" type="application/rss+xml" />
    <description>leaflet</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 23 Mar 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>leaflet</title>
      <link>/tags/leaflet/</link>
    </image>
    
    <item>
      <title>Coronavirus</title>
      <link>/post/coronavirus/</link>
      <pubDate>Mon, 23 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/post/coronavirus/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/pymjs/pym.v1.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/widgetframe-binding/widgetframe.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;libraries&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Libraries&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(maps)
library(ggthemes)
library(jsonlite)
library(leaflet)
library(widgetframe)
library(lubridate)
library(gganimate)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;read-in-the-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Read in the data&lt;/h1&gt;
&lt;p&gt;I downloaded the data from &lt;a href=&#34;https://datahub.io/core/covid-19&#34;&gt;DataHub&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;json_file &amp;lt;- &amp;#39;https://datahub.io/core/covid-19/datapackage.json&amp;#39;
json_data &amp;lt;- fromJSON(paste(readLines(json_file), collapse=&amp;quot;&amp;quot;))

# get list of all resources:
# print(json_data$resources$name)

path_to_file = json_data$resources$path[2]
dat &amp;lt;- read_csv(url(path_to_file))

dat &amp;lt;- dat %&amp;gt;%
  filter(Confirmed != 0)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;coronavirus-confirmed-cases&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Coronavirus Confirmed Cases&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;covid_leaf &amp;lt;- leaflet(data = dat, options = leafletOptions(minZoom = 1.5)) %&amp;gt;% 
  addProviderTiles(providers$CartoDB.DarkMatter)  %&amp;gt;%
  addCircleMarkers(~Long, ~Lat, radius = ~Confirmed/1000, label = ~Confirmed, fillOpacity = .2)

frameWidget(covid_leaf)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;/post/Coronavirus_files/figure-html//widgets/widget_unnamed-chunk-3.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;map-of-confirmed-cases&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Map of Confirmed Cases&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;world &amp;lt;- map_data(&amp;#39;world&amp;#39;) %&amp;gt;% fortify

world_mp &amp;lt;- ggplot() +
  borders(&amp;quot;world&amp;quot;, colour = &amp;quot;gray30&amp;quot;, fill = &amp;quot;gray24&amp;quot;) +
  theme_map() 

covid_map &amp;lt;- world_mp +
  geom_point(aes(x = Long, y = Lat, size = Confirmed),
             data = dat, 
             colour = &amp;#39;blue&amp;#39;, alpha = .6) +
  labs(size = &amp;#39;Cases&amp;#39;) +
  theme(legend.position = &amp;quot;none&amp;quot;)

covid_map&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Coronavirus_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;animation-of-confirmed-cases&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Animation of Confirmed Cases&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;covid_animate &amp;lt;- covid_map +
  transition_states(Date) +
  labs(title = &amp;#39;Date: {closest_state}&amp;#39;) 

animate(covid_animate)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Coronavirus_files/figure-html/unnamed-chunk-5-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;cases-by-week&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Cases by Week&lt;/h1&gt;
&lt;div id=&#34;confirmed&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Confirmed&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;country_dat &amp;lt;- dat %&amp;gt;%
  filter(`Country/Region` %in% c(&amp;quot;China&amp;quot;, &amp;quot;Italy&amp;quot;, &amp;quot;Korea, South&amp;quot;, &amp;quot;US&amp;quot;)) %&amp;gt;%
  rename(Country = `Country/Region`) %&amp;gt;%
  mutate(week = cut(Date, &amp;quot;week&amp;quot;, start.on.monday = FALSE))

country_dat %&amp;gt;%
  ggplot(aes(x = Confirmed, y = week)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;, fill = &amp;quot;blue4&amp;quot;) + 
  facet_wrap(~ Country) +
  labs(y = &amp;quot;&amp;quot;) + 
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Coronavirus_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;deaths&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Deaths&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;country_dat %&amp;gt;%
  ggplot(aes(x = Deaths, y = week)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;, fill = &amp;quot;red4&amp;quot;) + 
  facet_wrap(~ Country) +
  labs(y = &amp;quot;&amp;quot;) + 
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Coronavirus_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;recovered&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Recovered&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;country_dat %&amp;gt;%
  ggplot(aes(x = Recovered, y = week)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;, fill = &amp;quot;green4&amp;quot;) + 
  facet_wrap(~ Country) +
  labs(y = &amp;quot;&amp;quot;) + 
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Coronavirus_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Nepal Earthquake</title>
      <link>/post/nepal_earthquake/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/nepal_earthquake/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/pymjs/pym.v1.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/widgetframe-binding/widgetframe.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;I wanted to analyze the data from the &lt;a href=&#34;https://en.wikipedia.org/wiki/April_2015_Nepal_earthquake&#34;&gt;April 2015 Nepal earthquake&lt;/a&gt; that resulted in around 10,000 deaths. I am using a &lt;a href=&#34;https://data.world/opennepal/1b7b5d6e-3c98-49f4-a884-a167c4040d3a&#34;&gt;dataset&lt;/a&gt; that I found in &lt;code&gt;data.world&lt;/code&gt;. The data contains date, time, location and magnitude of the earthquake and the many aftershocks that followed. The data is updated as of June 2, 2015.&lt;/p&gt;
&lt;p&gt;Nepal is my birthplace, my homeland. The earthquake was an extremely traumatic event for people who live there. Many people lost family members, their houses. I visited Nepal in 2017 and saw that every other house in Patan, Nepal (close to Kathmandu) was damaged. My relatives would talk about their experience of the earthquakes every day.&lt;/p&gt;
&lt;div id=&#34;libraries&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Libraries&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(geojsonio)
library(broom)
library(gganimate)
library(leaflet)
library(widgetframe)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;read-in-the-data-and-clean&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Read in the data and clean&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;earthquake_dat &amp;lt;- read_csv(&amp;quot;https://raw.githubusercontent.com/meghapsimatrix/Data_Visualization/master/data/earthquake-0-csv-1.csv&amp;quot;) %&amp;gt;%
  mutate(lab = paste0(Epicentre, &amp;quot;; &amp;quot;, Date,&amp;quot;; Magnitude(ML): &amp;quot;, `Magnitude(ML)`))

head(earthquake_dat)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 7
##   Date       `Local Time` Latitude Longitude `Magnitude(ML)` Epicentre  lab     
##   &amp;lt;date&amp;gt;     &amp;lt;time&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;   
## 1 2015-06-01 04:35            28.0      85.5             4   Sindhupal… Sindhup…
## 2 2015-05-31 13:54            28.3      84.5             4.2 Lamjung    Lamjung…
## 3 2015-05-30 22:13            27.8      85.2             4.5 Nuwakot    Nuwakot…
## 4 2015-05-30 20:35            28.0      85.2             4   Rasuwa/Nu… Rasuwa/…
## 5 2015-05-30 01:52            27.8      85.2             4   Dhading /… Dhading…
## 6 2015-05-29 15:44            28        85.0             5.2 Dhading    Dhading…&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# there is one entry where I think the lat and long are switched
summary(earthquake_dat$Latitude)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##   26.94   27.71   27.82   28.06   27.98   84.71&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(earthquake_dat$Longitude)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##   28.16   85.23   85.80   85.25   86.06   86.67&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Gorkha seems like the lat and long are switched
(outlier &amp;lt;- earthquake_dat %&amp;gt;%
  filter(Latitude == max(Latitude)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 7
##   Date       `Local Time` Latitude Longitude `Magnitude(ML)` Epicentre lab      
##   &amp;lt;date&amp;gt;     &amp;lt;time&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;    
## 1 2015-04-25 18:29            84.7      28.2             5.5 Gorkha    Gorkha; …&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;earthquake_dat &amp;lt;- earthquake_dat %&amp;gt;%
  mutate(Latitude = if_else(lab == outlier$lab &amp;amp; Date == outlier$Date, outlier$Longitude, Latitude),
         Longitude = if_else(lab == outlier$lab &amp;amp; Date == outlier$Date, outlier$Latitude, Longitude))

# Sindhupalchowk seems like the Longitude is wrong
earthquake_dat %&amp;gt;%
  filter(Longitude == min(Longitude))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 7
##   Date       `Local Time` Latitude Longitude `Magnitude(ML)` Epicentre  lab     
##   &amp;lt;date&amp;gt;     &amp;lt;time&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;   
## 1 2015-05-08 08:19            27.8      28.9             4.2 Sindhupal… Sindhup…&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sindhupalchowk &amp;lt;- earthquake_dat %&amp;gt;%
  filter(str_detect(Epicentre, &amp;quot;Sindhu&amp;quot;))

# Mean imputing based on other values for Sindhupalchowk
earthquake_dat &amp;lt;- earthquake_dat %&amp;gt;%
  mutate(Longitude = if_else(Longitude == min(Longitude), mean(sindhupalchowk$Longitude), Longitude))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;make-a-map-of-nepal&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Make a Map of Nepal&lt;/h1&gt;
&lt;p&gt;I got the code for the base map from &lt;a href=&#34;https://stackoverflow.com/questions/50859765/chloropleth-map-with-geojson-and-ggplot2&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;np &amp;lt;- geojson_read(&amp;quot;https://raw.githubusercontent.com/mesaugat/geoJSON-Nepal/master/nepal-districts.geojson&amp;quot;,  what = &amp;quot;sp&amp;quot;)
np_dat &amp;lt;- tidy(np)


# plot
np_plot &amp;lt;- ggplot() +
  geom_polygon(data = np_dat, aes( x = long, y = lat, group = group)) 

np_plot&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Nepal_Earthquake_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;mapping-on-the-earthquake-and-aftershocks&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Mapping on the Earthquake and Aftershocks&lt;/h1&gt;
&lt;p&gt;Now plotting the latitude and longitudes. Size indicates the magnitude of the earthquake.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(np_earthquake &amp;lt;- np_plot + 
  geom_point(data = earthquake_dat, 
             aes(x = Longitude, y = Latitude, 
                 size = `Magnitude(ML)`), 
             color = &amp;quot;red&amp;quot;, alpha = .5) + 
  labs(color = &amp;quot;&amp;quot;) + 
  theme_void() +
  theme(legend.position = &amp;quot;none&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Nepal_Earthquake_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;animating&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Animating&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;np_animate &amp;lt;- np_earthquake +
  transition_states(Date) +
  labs(title = &amp;#39;Date: {closest_state}&amp;#39;) +
  enter_appear() +
  exit_disappear()

animate(np_animate)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Nepal_Earthquake_files/figure-html/unnamed-chunk-5-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;leaflet&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Leaflet&lt;/h1&gt;
&lt;p&gt;Created using the &lt;code&gt;leaflet&lt;/code&gt; package. Click on the dots on the map to learn the location, date, and the magnitude of the earthquake or aftershock.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;np_leaf &amp;lt;- leaflet(earthquake_dat) %&amp;gt;% 
  setView(lat = 27, lng = 85, zoom = 7) %&amp;gt;%
  addProviderTiles(providers$CartoDB.DarkMatter) %&amp;gt;%
  addCircleMarkers(~Longitude, ~Latitude,
                   radius = ~`Magnitude(ML)`, fillOpacity = 0.5,
                   popup = ~lab, stroke = FALSE)

frameWidget(np_leaf)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;/post/Nepal_Earthquake_files/figure-html//widgets/widget_unnamed-chunk-6.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
